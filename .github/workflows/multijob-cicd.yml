name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # 1️⃣ Build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn -B clean package

  # 2️⃣ Test (depends on Build)
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Run Tests
        run: mvn test

  # 3️⃣ SonarQube Scan (depends on Test)
  sonar:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: SonarQube Scan
        run: mvn sonar:sonar -Dsonar.projectKey=Ayushicybage_github-actions-Poc- -Dsonar.organization=ayushicybage -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  # 4️⃣ Docker Build & Push (depends on Sonar)
  docker:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }} -f /Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:${{ github.sha }}

  # 5️⃣ Deploy (depends on Docker)
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Deploy Application
        run: echo "Here you can add deployment script (SSH to server, k8s apply, etc.)"
